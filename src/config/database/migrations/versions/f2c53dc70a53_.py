"""empty message

Revision ID: f2c53dc70a53
Revises: 614e133fe943
Create Date: 2025-02-15 01:21:22.476249

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'f2c53dc70a53'
down_revision: Union[str, None] = '614e133fe943'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transaction',
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('balance_after', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('DEBIT', 'CREDIT', name='transaction_type_enum'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SUCCESS', 'FAILED', name='transaction_status_enum'), nullable=False),
    sa.Column('detail_type', sa.Enum('WITHDRAW_TRANSFER', 'INVESTMENT', 'TRANSFER', name='transaction_detail_type_enum'), nullable=False),
    sa.Column('payment_account_id', sa.Uuid(), nullable=False),
    sa.Column('parent_transaction_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('amount >= 0', name='check_amount_non_negative'),
    sa.CheckConstraint('balance_after >= 0', name='check_balance_after_non_negative'),
    sa.ForeignKeyConstraint(['parent_transaction_id'], ['transaction.id'], ),
    sa.ForeignKeyConstraint(['payment_account_id'], ['payment_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction')
    op.execute('DROP TYPE transaction_type_enum')
    op.execute('DROP TYPE transaction_status_enum')
    op.execute('DROP TYPE transaction_detail_type_enum')
    # ### end Alembic commands ###
